const prompts = [
"{A} ᴀɴᴅ {B} ɢᴏ ᴛᴏ ᴀ ғᴀɪʀ/ᴀᴍᴜsᴇᴍᴇɴᴛ ᴘᴀʀᴋ, ᴀɴᴅ {A} ᴡᴀɴᴛs ᴛᴏ ɢᴏ ᴏɴ ᴛʜᴇ ʀᴏʟʟᴇʀ ᴄᴏᴀsᴛᴇʀ, ᴀɴᴅ {B} ᴀɢʀᴇᴇs. ʟᴀᴛᴇʀ, {B} ʀᴇɢʀᴇᴛs ᴛʜᴇɪʀ ᴅᴇᴄɪsɪᴏɴ ᴀɴᴅ ᴇɴᴅs ᴜᴘ ᴄʟɪɴɢɪɴɢ ᴏɴᴛᴏ {A} ғᴏʀ ᴅᴇᴀʀ ʟɪғᴇ.",
"{B} ᴡᴏɴ'ᴛ ʟᴇᴛ {A} ɢᴇᴛ ᴏᴜᴛ ᴏғ ʙᴇᴅ ʙʏ ᴄᴜᴅᴅʟɪɴɢ ᴛʜᴇᴍ.",
"{A} ɪs ᴀʙᴏᴜᴛ ᴛᴏ ʟᴇᴀᴠᴇ ғᴏʀ ᴡᴏʀᴋ. {B} ᴀsᴋs ᴛʜᴇᴍ ɪғ ᴛʜᴇʏ'ᴠᴇ ғᴏʀɢᴏᴛᴛᴇɴ ᴀɴʏᴛʜɪɴɢ, ᴀɴᴅ {A} ɢɪᴠᴇs ᴛʜᴇᴍ ᴀ ᴋɪss. {B} ᴛᴜʀɴs ʀᴇᴅ ᴀɴᴅ ᴏᴘᴇɴs ᴛʜᴇɪʀ ʜᴀɴᴅ ᴛᴏ ʀᴇᴠᴇᴀʟ {A}'s ᴋᴇʏs/ᴡᴀʟʟᴇᴛ/ᴇᴛᴄ., sᴀʏɪɴɢ 'ɪ ᴍᴇᴀɴᴛ ᴛʜɪs, ʙᴜᴛ ᴛʜᴀɴᴋs.'",
"{A} ʙᴜʏs ᴀ ʙᴏx ᴏғ sᴡᴇᴇᴛs ᴀɴᴅ ᴘᴜᴛs ᴛʜᴇᴍ ɪɴ ᴛʜᴇ ᴄᴜᴘʙᴏᴀʀᴅ. {B} sᴘᴏɴᴛᴀɴᴇᴏᴜsʟʏ ᴇᴀᴛs ᴛʜᴇᴍ ᴀʟʟ ɪɴ ᴛʜᴇ ᴍɪᴅᴅʟᴇ ᴏғ ᴛʜᴇ ɴɪɢʜᴛ ᴀɴᴅ ᴛʀɪᴇs ᴛᴏ ᴋᴇᴇᴘ ɪᴛ ᴀ sᴇᴄʀᴇᴛ.",
"{A} ᴛᴇᴀᴄʜɪɴɢ {B} ʜᴏᴡ ᴛᴏ ᴋɪss, ᴀɴᴅ {B} ᴇɴᴅs ᴜᴘ ᴋɪssɪɴɢ {A} ʀᴇᴀʟʟʏ ǫᴜɪᴄᴋ, ɴᴇʀᴠᴏᴜsʟʏ ᴀsᴋs 'ʟɪᴋᴇ ᴛʜᴀᴛ?' ᴀɴᴅ ʟᴇᴀᴠᴇs {A} sɪʟᴇɴᴛ ᴀɴᴅ ғʟᴜsᴛᴇʀᴇᴅ ғᴏʀ ᴀ ᴍᴏᴍᴇɴᴛ.",
"{A} ᴀɴᴅ {B} ғᴀʟʟɪɴɢ ᴀsʟᴇᴇᴘ ᴛᴏɢᴇᴛʜᴇʀ ᴡɪᴛʜ ᴛʜᴇɪʀ ʜᴇᴀᴅs ᴏɴ ᴛʜᴇ ᴏᴛʜᴇʀ's sʜᴏᴜʟᴅᴇʀ/ʜᴇᴀᴅ ɪɴ ᴛʜᴇ ʙᴀᴄᴋsᴇᴀᴛ ᴏғ ᴛʜᴇ ᴄᴀʀ ᴡʜɪʟᴇ ᴛʜᴇɪʀ ғʀɪᴇɴᴅ ɪs ᴅʀɪᴠɪɴɢ.",
"{B} ʜᴏʟᴅɪɴɢ ᴀ sᴏʙʙɪɴɢ {A}. {A} ᴄʀɪᴇs ᴛʜᴇᴍsᴇʟᴠᴇs ᴛᴏ sʟᴇᴇᴘ ᴡɪᴛʜ ᴛʜᴇɪʀ ғᴀᴄᴇ ʙᴜʀɪᴇᴅ ɪɴᴛᴏ {B}.",
"{A} ᴀɴᴅ {B} sʟᴇᴇᴘɪɴɢ ᴏɴ ᴛᴏᴘ ᴏғ ᴇᴀᴄʜ ᴏᴛʜᴇʀ (ɪɴ ᴛʜᴇ ʙᴇᴅ, ᴄᴏᴜᴄʜ, ᴡʜᴇʀᴇᴠᴇʀ ʏᴏᴜ ᴘʀᴇғᴇʀ) ᴡʜᴇɴ {B} ғʟᴏᴘs ᴅᴏᴡɴ ᴏɴ ᴛʜᴇ ғʟᴏᴏʀ.",
"{B} ɪs ᴀ ᴘʀɪɴᴄᴇ ᴏʀ ᴘʀɪɴᴄᴇss, ғᴀʟʟɪɴɢ ғᴏʀ {A}, ᴛʜᴇ ᴄᴀsᴛʟᴇ ɢᴀʀᴅᴇɴᴇʀ ᴡʜᴏ ᴛᴇɴᴅs ᴛᴏ ᴛʜᴇ ғᴏʟɪᴀɢᴇ sᴜʀʀᴏᴜɴᴅɪɴɢ {B}'s ʙᴀʟᴄᴏɴʏ.",
"{A} ᴀɴᴅ {B} ᴡᴀᴛᴄʜɪɴɢ ᴀ ʜᴏʀʀᴏʀ ᴍᴏᴠɪᴇ. {A} ᴄᴀɴ'ᴛ sʟᴇᴇᴘ ᴛʜᴀᴛ ɴɪɢʜᴛ ᴀɴᴅ {B} ᴄᴏᴍғᴏʀᴛs ᴛʜᴇᴍ ɪɴ ᴀ ᴄᴜᴅᴅʟᴇ.",
"{A} ᴀɴᴅ {B} sʟᴇᴇᴘɪɴɢ ᴛᴏɢᴇᴛʜᴇʀ. {A} ᴡᴀᴋᴇs ᴜᴘ ғɪʀsᴛ ᴀɴᴅ ᴄᴏɴᴛᴇᴍᴘʟᴀᴛᴇs ᴡᴀᴋɪɴɢ {B} ᴡɪᴛʜ ᴀ ᴋɪss. {A} ʟᴇᴀɴs ɪɴ ᴏɴʟʏ ᴛᴏ ʜᴇsɪᴛᴀᴛᴇ ᴄᴇɴᴛɪᴍᴇᴛᴇʀs ᴀᴡᴀʏ ᴏᴜᴛ ᴏғ ᴇᴍʙᴀʀʀᴀssᴍᴇɴᴛ.. {B} ᴏᴘᴇɴs ᴛʜᴇɪʀ ᴇʏᴇs ᴀɴᴅ sᴀʏs, 'ᴡᴇʟʟ ɪғ ʏᴏᴜ ᴡᴏɴ'ᴛ ᴅᴏ ɪᴛ, ɪ ᴡɪʟʟ.'",
"{B} ɢᴇᴛs ᴛʜᴇ ʜɪᴄᴄᴜᴘs, ᴄᴀᴜsɪɴɢ {A} ᴛᴏ ʟᴀᴜɢʜ ᴇᴠᴇʀʏ ᴛɪᴍᴇ ᴛʜᴇʏ ᴛʀʏ ᴛᴏ ᴛᴀʟᴋ ᴜɴᴛɪʟ {A} ɢᴇᴛs ᴛʜᴇ ʜɪᴄᴄᴜᴘs ᴛᴏᴏ.",
"{A} ᴀɴᴅ {B} ɴᴏᴛ sᴘᴇᴀᴋɪɴɢ ᴇᴀᴄʜ ᴏᴛʜᴇʀ ʟᴀɴɢᴜᴀɢᴇs, ғᴀʟʟɪɴɢ ɪɴ ʟᴏᴠᴇ ᴀɴᴅ ʟᴇᴀʀɴɪɴɢ ᴛᴏɢᴇᴛʜᴇʀ.",
"{B} ᴀɴᴅ {A} ʙʀᴇᴀᴋ ᴜᴘ, ʙᴜᴛ ᴛʜᴇʏ ʜᴀᴠᴇ ᴀ ᴘᴇᴛ ᴀɴᴅ ɴᴇɪᴛʜᴇʀ ᴏғ ᴛʜᴇᴍ ᴡᴀɴᴛ ᴛᴏ ɢɪᴠᴇ ɪᴛ ᴜᴘ. ᴛʜᴇɴ ᴛʜᴇʏ sᴘᴇɴᴅ ᴀ ғᴇᴡ ᴅᴀʏs ᴇᴀᴄʜ ᴡɪᴛʜ ᴛʜᴇ ᴘᴇᴛ sᴇᴘᴀʀᴀᴛᴇʟʏ. ʙᴜᴛ ɪᴛ ᴋɪɴᴅᴀ ʜᴇʟᴘs ᴛʜᴇᴍ ɢᴇᴛ ᴛᴏɢᴇᴛʜᴇʀ ᴀɢᴀɪɴ.",
"{A} ᴀɴᴅ {B} ᴅᴀɴᴄɪɴɢ ɪɴ ᴛʜᴇ ᴍᴏᴏɴʟɪɢʜᴛ.",
"{A} ᴀɴᴅ {B} ᴀᴛ ᴀ ᴛʜᴇᴍᴇ ᴘᴀʀᴋ ᴏʀ ᴄᴀʀɴɪᴠᴀʟ, ᴀɴᴅ ᴡᴀʟᴋɪɴɢ ᴛᴏᴡᴀʀᴅs ᴏɴᴇ ᴏғ ᴛʜᴇ ᴍᴀɴʏ ɢᴀᴍᴇs ᴛᴏ ᴡɪɴ ᴀ ʟᴀʀɢᴇ sᴛᴜғғᴇᴅ ᴀɴɪᴍᴀʟ. {A} ɪs sᴜʀᴇ ᴛʜᴀᴛ ᴛʜᴇʏ ᴄᴀɴ ᴡɪɴ ᴛʜᴇ ɢᴀᴍᴇ, ʙᴜᴛ ᴀғᴛᴇʀ ᴍᴀɴʏ ᴀᴛᴛᴇᴍᴘᴛs (ᴀɴᴅ ᴀ ʟᴏᴛ ᴏғ ᴄᴀsʜ ᴅᴏᴡɴ ᴛʜᴇ ᴅʀᴀɪɴ) {A} ɢɪᴠᴇs ᴜᴘ. {B}, ʜᴏᴡᴇᴠᴇʀ, ᴛʀɪᴇs ᴀɴᴅ sᴜᴄᴄᴇᴇᴅs ᴏɴ ᴛʜᴇɪʀ ғɪʀsᴛ ɢᴏ.",
"{B} ᴀɴᴅ {A} ᴇᴀᴛɪɴɢ sᴘᴀɢʜᴇᴛᴛɪ ʟɪᴋᴇ ᴛʜᴇ ʟᴀᴅʏ ᴀɴᴅ ᴛʜᴇ ᴛʀᴀᴍᴘ ᴅɪᴅ ɪɴ ᴛʜᴀᴛ ᴀɴɪᴍᴀᴛᴇᴅ ғɪʟᴍ.",
"{B} ɪs ᴀ ɢʜᴏsᴛ ᴡʜᴏ ғᴀʟʟs ɪɴ ʟᴏᴠᴇ ᴡɪᴛʜ {A}, ʙᴜᴛ {A} ᴄᴀɴ'ᴛ sᴇᴇ ᴛʜᴇᴍ. ᴅᴏᴇs {B} ᴅᴏ ᴀɴʏᴛʜɪɴɢ ᴛᴏ ᴍᴀᴋᴇ {A} ɴᴏᴛɪᴄᴇ ᴛʜᴇᴍ?",
"{A} ᴀɴᴅ {B} ᴜɴᴀʙʟᴇ ᴛᴏ sʟᴇᴇᴘ ᴀғᴛᴇʀ ᴡᴀᴛᴄʜɪɴɢ ᴀ ʜᴏʀʀᴏʀ ᴍᴏᴠɪᴇ, ʙᴜᴛ ɴᴇɪᴛʜᴇʀ ᴡɪʟʟ ᴀᴅᴍɪᴛ ᴛʜᴀᴛ ᴛʜᴇ ᴍᴏᴠɪᴇ sᴄᴀʀᴇᴅ ᴛʜᴇᴍ.",
"{B} ᴀɴᴅ {A} ᴘʟᴀʏ ᴛᴡɪsᴛᴇʀ. ᴛʜɪɴɢs ɢᴇᴛ ᴇᴍʙᴀʀʀᴀssɪɴɢ ᴀɴᴅ ᴀᴡᴋᴡᴀʀᴅ ғᴀsᴛ.",
"{A} ᴛʀʏɪɴɢ ᴛᴏ ɢᴇᴛ sᴏᴍᴇᴛʜɪɴɢ ᴏɴ ᴛʜᴇɪʀ ᴄᴏᴍᴘᴜᴛᴇʀ ᴛᴏ ᴡᴏʀᴋ. ᴡʜɪʟᴇ ᴛʜᴇʏ’ʀᴇ ɢᴇᴛᴛɪɴɢ ғʀᴜsᴛʀᴀᴛᴇᴅ ᴀɴᴅ ғʟɪᴘᴘɪɴɢ ᴏᴜᴛ, {B} ɪs sɪᴛᴛɪɴɢ ɴᴇᴀʀʙʏ ᴄʀᴀᴄᴋɪɴɢ ᴜᴘ.",
"{A} ᴀɴᴅ {B} ғɪɴᴅ ᴛʜᴇᴍsᴇʟᴠᴇs sᴛʀᴀɴᴅᴇᴅ ɪɴ ᴀ ʀᴇᴍᴏᴛᴇ ᴄᴀʙɪɴ ᴅᴜʀɪɴɢ ᴀ sɴᴏᴡsᴛᴏʀᴍ, ғᴏʀᴄɪɴɢ ᴛʜᴇᴍ ᴛᴏ sᴘᴇɴᴅ ǫᴜᴀʟɪᴛʏ ᴛɪᴍᴇ ᴛᴏɢᴇᴛʜᴇʀ.",
"{A} ᴀɴᴅ {B} ᴅᴇᴄɪᴅᴇ ᴛᴏ ᴄʜᴀʟʟᴇɴɢᴇ ᴇᴀᴄʜ ᴏᴛʜᴇʀ ᴛᴏ ᴀ sᴇʀɪᴇs ᴏғ ʜɪʟᴀʀɪᴏᴜs ᴀɴᴅ ᴜɴᴄᴏɴᴠᴇɴᴛɪᴏɴᴀʟ ᴅᴀʀᴇs.",
"{B} sᴜʀᴘʀɪsᴇs {A} ᴡɪᴛʜ ᴀ ʜᴇᴀʀᴛғᴇʟᴛ ʟᴏᴠᴇ ʟᴇᴛᴛᴇʀ, sᴘᴀʀᴋɪɴɢ ᴀ ʀᴏᴍᴀɴᴛɪᴄ ᴀɴᴅ ᴇᴍᴏᴛɪᴏɴᴀʟ ᴇᴠᴇɴɪɴɢ.",
"{A} ᴀɴᴅ {B} ᴇᴍʙᴀʀᴋ ᴏɴ ᴀ sᴘᴏɴᴛᴀɴᴇᴏᴜs ᴀᴅᴠᴇɴᴛᴜʀᴇ, ᴇxᴘʟᴏʀɪɴɢ ᴀɴ ᴀʙᴀɴᴅᴏɴᴇᴅ ᴀᴍᴜsᴇᴍᴇɴᴛ ᴘᴀʀᴋ ᴀᴛ ɴɪɢʜᴛ.",
"{B} ᴛᴇᴀᴄʜᴇs {A} ᴀ ɴᴇᴡ ʜᴏʙʙʏ, ᴀɴᴅ ᴛʜᴇʏ ʙᴏɴᴅ ᴏᴠᴇʀ ᴛʜᴇ ʟᴇᴀʀɴɪɴɢ ᴘʀᴏᴄᴇss ᴀɴᴅ sʜᴀʀᴇᴅ ʟᴀᴜɢʜᴛᴇʀ.",
"{A} ᴀɴᴅ {B} ᴀᴄᴄɪᴅᴇɴᴛᴀʟʟʏ sᴡɪᴛᴄʜ ᴘʜᴏɴᴇs ғᴏʀ ᴀ ᴅᴀʏ, ʟᴇᴀᴅɪɴɢ ᴛᴏ ᴀᴍᴜsɪɴɢ ᴅɪsᴄᴏᴠᴇʀɪᴇs ᴀʙᴏᴜᴛ ᴇᴀᴄʜ ᴏᴛʜᴇʀ's ʟɪᴠᴇs.",
"ᴏɴ ᴀ ᴄᴀᴍᴘɪɴɢ ᴛʀɪᴘ, {A} ᴀɴᴅ {B} ʜᴀᴠᴇ ᴀ ᴘʟᴀʏғᴜʟ ᴄᴏᴍᴘᴇᴛɪᴛɪᴏɴ ᴛᴏ sᴇᴇ ᴡʜᴏ ᴄᴀɴ ʙᴜɪʟᴅ ᴛʜᴇ ʙᴇsᴛ ᴄᴀᴍᴘғɪʀᴇ.",
"{A} ᴀɴᴅ {B} ᴛᴀᴋᴇ ᴀ ᴅᴀɴᴄᴇ ᴄʟᴀss ᴛᴏɢᴇᴛʜᴇʀ, ʀᴇsᴜʟᴛɪɴɢ ɪɴ ᴀ ᴍɪx ᴏғ ʟᴀᴜɢʜᴛᴇʀ ᴀɴᴅ sᴜʀᴘʀɪsɪɴɢʟʏ ɢʀᴀᴄᴇғᴜʟ ᴍᴏᴍᴇɴᴛs.",
"{B} sᴜʀᴘʀɪsᴇs {A} ᴡɪᴛʜ ʙʀᴇᴀᴋғᴀsᴛ ɪɴ ʙᴇᴅ ᴀɴᴅ ᴀ ᴅᴀʏ ғɪʟʟᴇᴅ ᴡɪᴛʜ ᴛʜᴇɪʀ ғᴀᴠᴏʀɪᴛᴇ ᴀᴄᴛɪᴠɪᴛɪᴇs.",
"{A} ᴀɴᴅ {B} ɢᴇᴛ ᴄᴀᴜɢʜᴛ ɪɴ ᴀ ʀᴀɪɴsᴛᴏʀᴍ ᴡʜɪʟᴇ ᴏɴ ᴀ ʜɪᴋᴇ ᴀɴᴅ sᴇᴇᴋ ʀᴇғᴜɢᴇ ɪɴ ᴀ ᴄᴏᴢʏ ᴍᴏᴜɴᴛᴀɪɴ ᴄᴀʙɪɴ, ʟᴇᴀᴅɪɴɢ ᴛᴏ ᴀ ʀᴏᴍᴀɴᴛɪᴄ ᴇᴠᴇɴɪɴɢ ʙʏ ᴛʜᴇ ғɪʀᴇᴘʟᴀᴄᴇ."
];

module.exports.config = {
  name: "promptstory",
  version: "1.0.0",
  hasPermission: 0,
  credits: "Réynél",
  description: "Generate promptstory from provided names",
  commandCategory: "entertainment",
  usages: "[name + name]",
  cooldowns: 3,
};

module.exports.run = async function ({ api, event, args }) {
  const input = args.join(" ");
  const matches = input.match(/(\w+)\s*\+\s*(\w+)/g);
  
  if (!matches || matches.length === 0) {
    api.sendMessage(`❗ | sᴇɴsᴇɪ, ᴘʟᴇᴀsᴇ ᴘʀᴏᴠɪᴅᴇ ɴᴀᴍᴇs sᴇᴘᴀʀᴀᴛᴇᴅ ʙʏ "+".\nғᴏʀ ᴇxᴀᴍᴘʟᴇ: ᴘʀᴏᴍᴘᴛsᴛᴏʀʏ ʏᴏᴜ + ᴍᴇ`, event.threadID, event.messageID);
    return;
  }

  const randomp = Math.floor(Math.random() * prompts.length);
  const getrandom = prompts[randomp];
  
  let msg = getrandom;
  for (const match of matches) {
    const [A, B] = match.split(/\s*\+\s*/);
    msg = msg.replace(/{A}/g, A).replace(/{B}/g, B);
  }
  api.sendMessage(msg, event.threadID, event.messageID);
};