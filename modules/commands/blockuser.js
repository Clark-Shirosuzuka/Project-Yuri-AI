const axios = require('axios'); module.exports.config = {
  name: "blockuser",
  version: "1.0.0",
  hasPermssion: 2,
  credits: "Réynél Eśquível",
  description: "Block or unblock a user in Facebook",
  commandCategory: "facebook",
  cooldowns: 5,
  usages: "Blockuser [userID | unblock userID | list]",
  permissions: { "*": "Settings" } }; module.exports.run = async ({ api, event, args }) => { const [action, userID] = args; if (!action || !userID) return api.sendMessage("ℹ️ | 𝖬𝖺𝗌𝗍𝖾𝗋, 𝗉𝗅𝖾𝖺𝗌𝖾 𝗉𝗋𝗈𝗏𝗂𝖽𝖾 𝖻𝗈𝗍𝗁 𝖺𝖼𝗍𝗂𝗈𝗇 𝖺𝗇𝖽 𝗎𝗌𝖾𝗋 𝖨𝖣", event.threadID); if (action === "list") { try { const response = await axios.get(`https://graph.facebook.com/v12.0/me/blocked?access_token=${api.getCurrentAccessToken()}`); const blockedUsers = response.data.data; const blockedUserIDs = blockedUsers.map(user => user.id); return api.sendMessage(`📋 | 𝖬𝖺𝗌𝗍𝖾𝗋, 𝗁𝖾𝗋𝖾'𝗌 𝗍𝗁𝖾 𝗅𝗂𝗌𝗍 𝗈𝖿 𝖻𝗅𝗈𝖼𝗄𝖾𝖽 𝗎𝗌𝖾𝗋𝗌: ${blockedUserIDs.join(", ")}`, event.threadID); } catch (error) { console.error('❎ | 𝖦𝗈𝗆𝖾𝗇 𝗆𝖺𝗌𝗍𝖾𝗋, 𝖻𝗎𝗍 𝖿𝖺𝗂𝗅𝖾𝖽 𝗍𝗈 𝖿𝖾𝗍𝖼𝗁 𝖻𝗅𝗈𝖼𝗄𝖾𝖽 𝗎𝗌𝖾𝗋𝗌:', error.message); return api.sendMessage("❎ | 𝖦𝗈𝗆𝖾𝗇 𝗆𝖺𝗌𝗍𝖾𝗋, 𝖻𝗎𝗍 𝖺𝗇 𝖾𝗋𝗋𝗈𝗋 𝗁𝖺𝗌 𝗈𝖼𝖼𝗎𝗋𝗋𝖾𝖽 𝗐𝗁𝗂𝗅𝖾 ᴛʜᴇ ʟɪsᴛ ᴏғ ʙʟᴏᴄᴋᴇᴅ ᴜsᴇʀs", event.threadID); } } const blockAction = action.toLowerCase() === "unblock" ? "unblock" : "block"; try { const response = await axios.post(`https://graph.facebook.com/v12.0/me/${blockAction}?access_token=${api.getCurrentAccessToken()}&user=${userID}`); if (response.data.success) { return api.sendMessage(`ᴍᴀsᴛᴇʀ, ᴛʜᴇ ᴜsᴇʀ ᴡɪᴛʜ ɪᴅ ${userID} ʜᴀs ʙᴇᴇɴ ${blockAction}ᴇᴅ sᴜᴄᴄᴇssғᴜʟʟʏ.`, event.threadID); } else { return api.sendMessage(`ɢᴏᴍᴇɴɴᴀsᴀɪ ᴍᴀsᴛᴇʀ, ʙᴜᴛ ғᴀɪʟᴇᴅ ᴛᴏ ${blockAction} ᴛʜᴇ ᴜsᴇʀ`, event.threadID); } } catch (error) { console.error(`ɢᴏᴍᴇɴɴᴀsᴀɪ ᴍᴀsᴛᴇʀ, ʙᴜᴛ ғᴀɪʟᴇᴅ ᴛᴏ ${blockAction} ᴛʜᴇ ɪsᴇʀ:`, error.message); return api.sendMessage(`ɢᴏᴍᴇɴɴᴀsᴀɪ ᴍᴀsᴛᴇʀ, ʙᴜᴛ ᴛʜᴇʀᴇ ɪs ᴀɴ ᴇʀʀᴏʀ ᴏᴄᴄᴜʀʀᴇᴅ ᴡʜɪʟᴇ ${blockAction}ɪɴɢ ᴛʜᴇ ᴜsᴇʀ.`, event.threadID); } }; 